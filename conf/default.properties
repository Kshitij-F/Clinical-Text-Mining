
# jdbcDriver is the database url that uses for selecting TUI by CUI from the table MRSTY.
jdbcDriver=jdbc:mysql://localhost:3306/umls?user=root&password=root
#url of solr we use to match umls term
solrServerUrl=http://localhost:8983/solr
sparkMaster=local

# caseFactor is [0, 1] value. It indicates how much you concern the case. It will affect the score
# when you select a term from solr. Value 0 means upcase and lowcase are totally different, and
# value 1 means upcase and lowcase are not different at all.
caseFactor=0.8

#Should we take the newline as the end of a sentence? or just ignore the newline?
#  1: replace with space; 2: replace with '.'; 0: do nothing
ignoreNewLine=2

# how to get the text to get Ngram
blogDbUrl=jdbc:mysql://localhost:3306/ytex?user=root&password=root
blogTbl=tmp_org_yahoo
blogIdCol=id
blogTextCol=concat(subject, ". ", content, ". ", chosenanswer)

# limit the blog to be analyzed, mainly for test
blogLimit=10000000

#root dir of lvg
lvgdir=C:\\fsu\\ra\\UmlsTagger\\lvg2015\\

# include POS tagger. The Ngram (basic terms) have contain at least one of those POS tagger
posInclusive=NN NNS NNP NNPS
# 0 - 100
umlsLikehoodLimit=50

WinLen=10

# use to force delimit gram. Delimiter = Pattern.compile("[,;/\\:\\(\\)\\[\\]\\{\\}\"]+")
delimiter =[,;/\\:\\(\\)\\[\\]\\{\\}\"]+

# besides the file of stop word, you can specify a regex to indicate what is a stop word.
# exclude the gram start with digital.
stopwordRegex=^\\d+($|(\\s+.*))

partitionTfFilter=2
stag1TfFilter=10
stag2TfFilter=10
stag1CvalueFilter=2
stag2CvalueFilter=2

topTfNgram=20000
topCvalueNgram=0
topTfdfNgram=0

partitionNumber=8

#get the training data from (previous save) file, do not construct the Ngram again.
ngramSaveFile=c:\\fsu\\ra\\data\\ngram_yahoo_qa_1206.serd
clusteringFromFile=true
trainOnlyChv=true

# if a Ngram math this filter(regex), the detail information will output to console..
debugFilterNgram=aaaaaaaaaaaaaaaaaa

# k-mean parameters
runKmeans=true
k_start=15
k_end=15
k_step=3
maxIterations=1000
runs=10
# how many percent of the training data does a cluster at least contain?
clusterThresholdPt=5
# how many percent of the data is sample as test data(for evaluation)
testSample=30
#number of ngram for training. For test purpose. <0: no limit;
trainNgramCnt=-1
# the feature used in kmeans
# tfdf,cvalue,umls_score,chv_score,contain_umls,contain_chv,win_umls,win_chv,sent_umls,sent_chv,umls_dist,chv_dist,sytax,nn,an,pn,anpn
useFeatures=tfdf,cvalue,umls_score,chv_score,contain_umls,contain_chv,win_umls,win_chv,sent_umls,sent_chv,umls_dist,chv_dist,sytax,nn,an,pn,anpn

runPredict=true
runRank=true
# the granular of rank (percent), e.g. rankGranular=5 work as 5%, 10%, 15%,
rankGranular=5
# the beta value for evaluating f-score, see:https://en.wikipedia.org/wiki/F1_score
# Two other commonly used F measures are the F_{2} measure, which weights recall higher than precision,
#and the F_{0.5} measure, which puts more emphasis on precision than recall.
fscoreBeta=1
#how many percent of ngram is shown the detail after rank. it show info of every ngram in this top ${showDetailRankPt} percent; <0 don't show detail; >100 show all.
showDetailRankPt=300
# no use for now
rankWithTrainData=false
