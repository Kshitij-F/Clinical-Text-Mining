# Case insensitive pattern matching (see java.util.regex.Pattern flags)

#docs: http://nlp.stanford.edu/software/tokensregex.html

ENV.defaultStringPatternFlags = 2

# Map variable names to annotation keys
ner = { type: "CLASS", value: "edu.stanford.nlp.ling.CoreAnnotations$NamedEntityTagAnnotation" }
normalized = { type: "CLASS", value: "edu.stanford.nlp.ling.CoreAnnotations$NormalizedNamedEntityTagAnnotation" }
tokens = { type: "CLASS", value: "edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation" }

# Define ruleType to be over tokens
ENV.defaults["ruleType"] = "tokens"

########## Use stage to control the priority of the patern:
## 50: lowest 
## 10: highest

#### variable (they are defined as Non-capturing group##
#!!! $WITHIN and $MORETHAN are not groups!
$WITHIN   = ("within" | "in" | "less" "than" | "equals" "to" | "<" | "<" "=" | "<" "/" "="| "<" "or" "=")
$MORETHAN = (/greater|more/ "than" | "at" "least" | ">" | ">" "=" | ">" "/" "=" | ">" "or" "=")
$PRIOR    = ("since"? /since|prior/ "to"? "for"?)
$EXCEPT   = ("except" "for"?)
$PADDING  = ([]{0,5})
$DUR      = ([]{0,5} [ { ner:DURATION } ]+)
$DUR2	  = ([]{0,5} [ { ner:DURATION } ]+ []{0,5})

#() within/in/less than/equal to ()
{
  ruleType: "tokens",  
  pattern: ( ( []{1,20} ) ($WITHIN) $DUR ),
  action: (Annotate($1, ner, "CUI_DISEASE_2"),Annotate($2, ner, "KEY")),
  priority:100.0,
  stage:45,
  result: "WITHIN"
}
{
  ruleType: "tokens",  
  pattern: ( ( []{1,20} ) ($MORETHAN) $DUR ),
  action: (Annotate($1, ner, "CUI_DISEASE_2"),Annotate($2, ner, "KEY")),
  priority:100.0,
  stage:45,
  result: "MORETHAN"
}

#history of () within/in ()
{
  ruleType: "tokens",  
  pattern: ( ("history") "of" ( []{1,20} ) $WITHIN $DUR),
  action: (Annotate($1, ner, "KEY"),Annotate($2, ner, "CUI_DISEASE_2")),
  priority:100.0,
  stage:20,
  result: "HISTORY_WITHIN"
}
{
  ruleType: "tokens",  
  pattern: ( ("history") "of" ( []{1,20} ) $MORETHAN $DUR ),
  action: (Annotate($1, ner, "KEY"),Annotate($2, ner, "CUI_DISEASE_2")),
  priority:100.0,
  stage:20,
  result: "HISTORY_MORETHAN"
}


#history of () within () except for ()
{
  ruleType: "tokens",
  pattern: ( ("history") "of" ( []{1,20} ) $WITHIN $DUR2 $EXCEPT ( []{1,20}) ),
  action: (Annotate($1, ner, "KEY"),Annotate($2, ner, "CUI_DISEASE_3"),Annotate($3, ner, "CUI_DISEASE_EF")),
  priority:0,
  stage:10,              
  result: "HISTORY_WITHIN_EF"
}
{
  ruleType: "tokens",
  pattern: ( ("history") "of" ( []{1,20} ) $MORETHAN $DUR2 $EXCEPT ( []{1,20}) ),
  action: (Annotate($1, ner, "KEY"),Annotate($2, ner, "CUI_DISEASE_3"),Annotate($3, ner, "CUI_DISEASE_EF")),
  priority:0,
  stage:10,
  result: "HISTORY_MORETHAN_EF"
}

#history of () within () prior to ()
{
  ruleType: "tokens",  
  pattern: ( ("history") "of" ( []{1,20} ) $WITHIN $DUR2 $PRIOR ( []{1,20} ) ),
  action: (Annotate($1, ner, "KEY"),Annotate($2, ner, "CUI_DISEASE_5")),
  priority:100,
  stage:10,
  result: "HISTORY_WITHIN_PT"
}
{
  ruleType: "tokens",  
  pattern: ( ("history") "of" ( []{1,20} ) $MORETHAN $DUR2 $PRIOR ( []{1,20} ) ),
  action: (Annotate($1, ner, "KEY"),Annotate($2, ner, "CUI_DISEASE_5")),
  priority:100,
  stage:10,
  result: "HISTORY_MORETHAN_PT"
}
#within () prior ()
{
  ruleType: "tokens",  
  pattern: ( ($WITHIN) $DUR2 $PRIOR ( []{1,20} ) ),
  action: (Annotate($1, ner, "KEY"),Annotate($2, ner, "CUI_DISEASE_6")),
  priority:100,
  stage:40,
  result: "WITHIN_PT"
}
#more than () prior ()
{
  ruleType: "tokens",  
  pattern: ( ($MORETHAN) $DUR2 $PRIOR ( []{1,20} ) ),
  action: (Annotate($1, ner, "KEY"),Annotate($2, ner, "CUI_DISEASE_6")),
  priority:100,
  stage:40,
  result: "MORETHAN_PT"
}
# prior () for ()
{
  ruleType: "tokens",  
  pattern: ( ("prior") ( []{1,20} ) "for" $DUR ),
  action: (Annotate($1, ner, "KEY"),Annotate($2, ner, "CUI_DISEASE_9")),
  priority:100,
  stage:40,
  result: "PRIOR_F"
}

# prior () for () except for ()
{
  ruleType: "tokens",
  pattern: ( ("prior") ( []{1,20} ) "for" $DUR2 $EXCEPT ( []{1,20} ) ),
  action: (Annotate($1, ner, "KEY"),Annotate($2, ner, "CUI_DISEASE_1"),Annotate($3, ner, "CUI_DISEASE_EF")),
  priority:100,
  stage:10,
  result: "PRIOR_FEF"
}

#prior () for () including ()
{
  ruleType: "tokens",  
  pattern: ( ("prior") ( []{1,20} ) "for" $DUR2 "including"  ( []{1,20} ) ),
  action: (Annotate($1, ner, "KEY"),Annotate($2, ner, "CUI_DISEASE_14"),Annotate($3, ner, "CUI_DISEASE_IN")),
  priority:100,
  stage:10,
  result: "PRIOR_FI"
}

#prior () for more than ()
{
  ruleType: "tokens",  
  pattern: ( ("prior") ( []{1,20} ) "for" "more" "than" $DUR ),
  action: (Annotate($1, ner, "KEY"),Annotate($2, ner, "CUI_DISEASE_17")),
  priority:100,
  stage:10,
  result: "PRIOR_MT"
}

#concurrent () for ()
{
  ruleType: "tokens",  
  pattern: ( ("concurrent") ( []{1,20} ) "for" $DUR ),
  action: (Annotate($1, ner, "KEY"),Annotate($2, ner, "CUI_DISEASE_24")),
  priority:100,
  stage:10,
  result: "CONCURRENT_EF"
}


# (DISEASE) in the past (DURATION)
{
  ruleType: "tokens",  
  pattern: ( ( []{1,20} ) ("in") "the" "past" $DUR ),
  action: (Annotate($1, ner, "CUI_DISEASE_28"),Annotate($2, ner, "KEY")),
  priority:100,
  stage:50,
  result: "PAST"
}

# (Disease) (Duration) prior to
{
  ruleType: "tokens",  
  pattern: ( ( []{1,20} ) $DUR2 ($PRIOR) ),
  action: (Annotate($1, ner, "CUI_DISEASE_29"),Annotate($2, ner, "KEY")),
  priority:100,
  stage:50,
  result: "PRIOR_TO"
}

{
  ruleType: "tokens",  
  pattern: ( ("Histologically") "confirmed" ( []{1,20} ) $WITHIN $DUR ),
  action: (Annotate($1, ner, "KEY"),Annotate($2, ner, "CUI_DISEASE_31")),
  priority:100,
  stage:20,
  result: "CONFIRMED_WITHIN"
}
{
  ruleType: "tokens",  
  pattern: ( ("Histologically") "confirmed" ( []{1,20} ) $MORETHAN $DUR ),
  action: (Annotate($1, ner, "KEY"),Annotate($2, ner, "CUI_DISEASE_31")),
  priority:100,
  stage:20,
  result: "CONFIRMED_MORETHAN"
}

{
  ruleType: "tokens",  
  pattern: ( ("cytologically" "or"? "histologically"? | "histologically" "or"? "cytologically"? | "pathologically" ) ("confirmed") ( []{1,20}) ),
  action: (Annotate($2, ner, "KEY"),Annotate($3, ner, "CUI_DISEASE_1")),
  priority:100,
  stage:40,
  result: "CONFIRMED"
}

# at least () since prior ()
# At least (DURATION) prior to 
# at least () prior () for (?)
# at least () since (?) prior to ()
# at least () since prior () except for (?)
# at least () since prior () including (?)
# at least () to () since prior ()

{
  ruleType: "tokens",  
  pattern: ( ("at") "least" $DUR2 $PRIOR ( []{1,20} ) ),
  action: (Annotate($1, ner, "KEY"),Annotate($2, ner, "CUI_DISEASE_32")),
  priority:100,
  stage:20,
  result: "ATLEAST_PT"
}


#negative () within ()
#negative () within () prior to ()
{
  ruleType: "tokens",  
  pattern: ( ("negative") ( []{1,20} ) ($WITHIN) $DUR ),
  action: (Annotate($1, ner, "NEG"),Annotate($2, ner, "CUI_DISEASE_33"),Annotate($3, ner, "KEY")),
  priority:100.0,
  stage:20,
  result: "WITHIN"
}
{
  ruleType: "tokens",  
  pattern: ( ("negative") ( []{1,20} ) ($MORETHAN) $DUR ),
  action: (Annotate($1, ner, "NEG"),Annotate($2, ner, "CUI_DISEASE_33"),Annotate($3, ner, "KEY")),
  priority:100.0,
  stage:20,
  result: "MORETHAN"
}

{
  ruleType: "tokens",  
  pattern: ( ("negative") ( []{1,20} ) ($WITHIN) $DUR2 $PRIOR  ),
  action: (Annotate($1, ner, "NEG"),Annotate($2, ner, "CUI_DISEASE_34"),Annotate($3, ner, "KEY")),
  priority:100.0,
  stage:10,
  result: "WITHIN_PT"
}
{
  ruleType: "tokens",  
  pattern: ( ("negative") ( []{1,20} ) ($MORETHAN) $DUR2 $PRIOR  ),
  action: (Annotate($1, ner, "NEG"),Annotate($2, ner, "CUI_DISEASE_34"),Annotate($3, ner, "KEY")),
  priority:100.0,
  stage:10,
  result: "MORETHAN_PT"
}

{
  ruleType: "tokens",  
  pattern: ( ( []{1,20} ) ("required") []{0,20} "for" "period" $DUR2 PRIOR ( []{1,20} ) ),
  action: (Annotate($1, ner, "CUI_DISEASE_41"),Annotate($2, ner, "KEY")),
  priority:100,
  stage:20,
  result: "REQUIRED_FOR_PERIOD"
}

{
  ruleType: "tokens",  
  pattern: ( ("history") "of" ( []{1,20} )),
  action: (Annotate($1, ner, "KEY"),Annotate($2, ner, "CUI_DISEASE_2")),
  priority:100.0,
  stage:50,
  result: "HISTORY"
}

{
  ruleType: "tokens",  
  pattern: ( "prior"? "or"? ("concurrent") ( []{1,20} )  ),
  action: (Annotate($1, ner, "KEY"),Annotate($2, ner, "CUI_DISEASE_24")),
  priority:100,
  stage:50,
  result: "CONCURRENT"
}


{
  ruleType: "tokens",  
  pattern: ( ("concurrent") ( []{1,20} ) $EXCEPT ( []{1,20} ) ),
  action: (Annotate($1, ner, "KEY"),Annotate($2, ner, "CUI_DISEASE_2"),Annotate($3, ner, "CUI_DISEASE_EF")),
  priority:100,
  stage:45,
  result: "CONCURRENT_EF"
}

{
  ruleType: "tokens",  
  pattern: ( ("concurrent") ( []{1,20} ) "including" ( []{1,20} ) ),
  action: (Annotate($1, ner, "KEY"),Annotate($2, ner, "CUI_DISEASE_2"),Annotate($3, ner, "CUI_DISEASE_IN")),
  priority:100,
  stage:45,
  result: "CONCURRENT_IN"
}

{
  ruleType: "tokens",  
  pattern: ( ("concurrent") "therapy" ( []{1,20} )  ),
  action: (Annotate($1, ner, "KEY"),Annotate($2, ner, "CUI_DISEASE_2")),
  priority:100,
  stage:45,
  result: "CONCURRENT_TH"
}


{
  ruleType: "tokens",  
  pattern: ( ("positive") ( []{1,20} ) $WITHIN $DUR ),
  action: (Annotate($1, ner, "KEY"),Annotate($2, ner, "CUI_DISEASE_2")),
  priority:100,
  stage:20,
  result: "POSITIVE_WITHIN"
}


{
  ruleType: "tokens",  
  pattern: ( "prior" ( []{1,20} ) ("allown") ),
  action: (Annotate($2, ner, "KEY"),Annotate($1, ner, "CUI_DISEASE_1")),
  priority:100,
  stage:20,
  result: "P_ALLOWN"
}


{
  ruleType: "tokens",  
  pattern: ( ("history") "of" ( []{1,20} ) "including" ( []{1,20} ) ),
  action: (Annotate($1, ner, "KEY"),Annotate($2, ner, "CUI_DISEASE_1"),Annotate($3, ner, "CUI_DISEASE_IN")),
  priority:100,
  stage:40,
  result: "HISTORY_IN"
}


{
  ruleType: "tokens",  
  pattern: ( ("history") "of" ( []{1,20} ) $WITHIN $DUR "including" ( []{1,20} ) ),
  action: (Annotate($1, ner, "KEY"),Annotate($2, ner, "CUI_DISEASE_1"),Annotate($3, ner, "CUI_DISEASE_IN")),
  priority:100,
  stage:10,
  result: "HISTORY_IN"
}
